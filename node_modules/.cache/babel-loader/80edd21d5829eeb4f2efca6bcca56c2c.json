{"ast":null,"code":"const URL_userSignup = \"http://localhost:3003/signup\"; // const URL_userSignin = \"http://localhost:3003/signin\";\n\nconst URL_userSignin = \"ttps://fullstack-test-backend-basri.herokuapp.com/signin\";\nconst URL_currentPanic = \"http://localhost:3003/panic_current\";\nconst URL_updatePanic = \"http://localhost:3003/panic_update\";\nlet url = 'https://fullstack-test-backend-basri.herokuapp.com/history';\n\nconst postSimple = (url, obj) => {\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify(obj)\n  });\n};\n\nconst postAuth = (url, obj) => {\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: localStorage.token\n    },\n    body: JSON.stringify(obj)\n  });\n};\n\nconst getSimple = url => {\n  return fetch(url);\n};\n\nconst newUserSignUp = userSignupObject => {\n  return postSimple(URL_userSignup, userSignupObject).then(response => response.json());\n};\n\nconst UserSignIn = userSignInObject => {\n  return postSimple(URL_userSignin, userSignInObject).then(response => response.json());\n};\n\nconst getCurrentPanicStatus = () => {\n  return getSimple(URL_currentPanic);\n};\n\nconst postNewPanicStatus = obj => {\n  return postAuth(URL_updatePanic, obj);\n};\n\nexport default {\n  newUserSignUp,\n  UserSignIn,\n  getCurrentPanicStatus,\n  postNewPanicStatus\n};","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/APIsHelpers/API.js"],"names":["URL_userSignup","URL_userSignin","URL_currentPanic","URL_updatePanic","url","postSimple","obj","fetch","method","headers","Accept","body","JSON","stringify","postAuth","Authorization","localStorage","token","getSimple","newUserSignUp","userSignupObject","then","response","json","UserSignIn","userSignInObject","getCurrentPanicStatus","postNewPanicStatus"],"mappings":"AAAA,MAAMA,cAAc,GAAG,8BAAvB,C,CACA;;AACA,MAAMC,cAAc,GAAG,0DAAvB;AACA,MAAMC,gBAAgB,GAAG,qCAAzB;AACA,MAAMC,eAAe,GAAG,oCAAxB;AAEA,IAAIC,GAAG,GAAG,4DAAV;;AAEA,MAAMC,UAAU,GAAG,CAACD,GAAD,EAAME,GAAN,KAAc;AAC/B,SAAOC,KAAK,CAACH,GAAD,EAAM;AAChBI,IAAAA,MAAM,EAAE,MADQ;AAEhBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAFO;AAMhBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf;AANU,GAAN,CAAZ;AAQD,CATD;;AAWA,MAAMQ,QAAQ,GAAG,CAACV,GAAD,EAAME,GAAN,KAAc;AAC7B,SAAOC,KAAK,CAACH,GAAD,EAAM;AAChBI,IAAAA,MAAM,EAAE,MADQ;AAEhBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE,kBAFD;AAGPK,MAAAA,aAAa,EAAEC,YAAY,CAACC;AAHrB,KAFO;AAOhBN,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf;AAPU,GAAN,CAAZ;AASD,CAVD;;AAYA,MAAMY,SAAS,GAAGd,GAAG,IAAI;AACvB,SAAOG,KAAK,CAACH,GAAD,CAAZ;AACD,CAFD;;AAIA,MAAMe,aAAa,GAAGC,gBAAgB,IAAI;AACxC,SAAOf,UAAU,CAACL,cAAD,EAAiBoB,gBAAjB,CAAV,CAA6CC,IAA7C,CAAkDC,QAAQ,IAC/DA,QAAQ,CAACC,IAAT,EADK,CAAP;AAGD,CAJD;;AAMA,MAAMC,UAAU,GAAGC,gBAAgB,IAAI;AACrC,SAAOpB,UAAU,CAACJ,cAAD,EAAiBwB,gBAAjB,CAAV,CAA6CJ,IAA7C,CAAkDC,QAAQ,IAC/DA,QAAQ,CAACC,IAAT,EADK,CAAP;AAGD,CAJD;;AAMA,MAAMG,qBAAqB,GAAG,MAAM;AAClC,SAAOR,SAAS,CAAChB,gBAAD,CAAhB;AACD,CAFD;;AAIA,MAAMyB,kBAAkB,GAAGrB,GAAG,IAAI;AAChC,SAAOQ,QAAQ,CAACX,eAAD,EAAkBG,GAAlB,CAAf;AACD,CAFD;;AAIA,eAAe;AACba,EAAAA,aADa;AAEbK,EAAAA,UAFa;AAGbE,EAAAA,qBAHa;AAIbC,EAAAA;AAJa,CAAf","sourcesContent":["const URL_userSignup = \"http://localhost:3003/signup\";\n// const URL_userSignin = \"http://localhost:3003/signin\";\nconst URL_userSignin = \"ttps://fullstack-test-backend-basri.herokuapp.com/signin\";\nconst URL_currentPanic = \"http://localhost:3003/panic_current\";\nconst URL_updatePanic = \"http://localhost:3003/panic_update\";\n\nlet url = 'https://fullstack-test-backend-basri.herokuapp.com/history'\n\nconst postSimple = (url, obj) => {\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify(obj)\n  });\n};\n\nconst postAuth = (url, obj) => {\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: localStorage.token\n    },\n    body: JSON.stringify(obj)\n  });\n};\n\nconst getSimple = url => {\n  return fetch(url);\n};\n\nconst newUserSignUp = userSignupObject => {\n  return postSimple(URL_userSignup, userSignupObject).then(response =>\n    response.json()\n  );\n};\n\nconst UserSignIn = userSignInObject => {\n  return postSimple(URL_userSignin, userSignInObject).then(response =>\n    response.json()\n  );\n};\n\nconst getCurrentPanicStatus = () => {\n  return getSimple(URL_currentPanic);\n};\n\nconst postNewPanicStatus = obj => {\n  return postAuth(URL_updatePanic, obj);\n};\n\nexport default {\n  newUserSignUp,\n  UserSignIn,\n  getCurrentPanicStatus,\n  postNewPanicStatus\n};"]},"metadata":{},"sourceType":"module"}