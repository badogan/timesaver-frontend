{"ast":null,"code":"import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n  const [validationStatus, setValidationStatus] = useState(false);\n  const [errorArray, setErrorArray] = useState([]);\n\n  const initiateValidation = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n    runValidationRules();\n    return {};\n  };\n\n  const addToErrorArray = string => setErrorArray([...errorArray, string]);\n\n  const runValidationRules = () => {\n    if (!usernameToValidate) {\n      setValidationStatus(false);\n      addToErrorArray(\"Username does not exist!\");\n    }\n\n    if (!passwordToValidate) {\n      setValidationStatus(false);\n      addToErrorArray(\"Password does not exist!\");\n    }\n\n    if (passwordToValidate && passwordToValidate.length < 5) {\n      setValidationStatus(false);\n      addToErrorArray(\"Passoword length less than 5 characters!\");\n    }\n\n    console.log(validationResultsArray.reduce((sum, num) => sum && num, true));\n    setValidationStatus(validationResultsArray.reduce((sum, num) => sum && num, true));\n  };\n\n  return {\n    validationStatus,\n    errorArray,\n    initiateValidation\n  };\n};\n\nexport default useValidation;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/hooks/useValidation.js"],"names":["useState","useValidation","usernameToValidate","setUsernameToValidate","passwordToValidate","setPasswordToValidate","validationStatus","setValidationStatus","errorArray","setErrorArray","initiateValidation","name","password","runValidationRules","addToErrorArray","string","length","console","log","validationResultsArray","reduce","sum","num"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CH,QAAQ,EAA5D;AACA,QAAM,CAACI,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,EAA5D;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMU,kBAAkB,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC7CT,IAAAA,qBAAqB,CAACQ,IAAD,CAArB;AACAN,IAAAA,qBAAqB,CAACO,QAAD,CAArB;AACAC,IAAAA,kBAAkB;AAClB,WAAO,EAAP;AACD,GALD;;AAOA,QAAMC,eAAe,GAAGC,MAAM,IAAIN,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBO,MAAhB,CAAD,CAA/C;;AAEA,QAAMF,kBAAkB,GAAG,MAAM;AAC/B,QAAI,CAACX,kBAAL,EAAyB;AACrBK,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAO,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAI,CAACV,kBAAL,EAAyB;AACrBG,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAO,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAIV,kBAAkB,IAAIA,kBAAkB,CAACY,MAAnB,GAA4B,CAAtD,EAA0D;AACtDT,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAO,MAAAA,eAAe,CAAC,0CAAD,CAAf;AACH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYC,sBAAsB,CAACC,MAAvB,CAA8B,CAACC,GAAD,EAAKC,GAAL,KAAWD,GAAG,IAAIC,GAAhD,EAAoD,IAApD,CAAZ;AACAf,IAAAA,mBAAmB,CAACY,sBAAsB,CAACC,MAAvB,CAA8B,CAACC,GAAD,EAAKC,GAAL,KAAWD,GAAG,IAAIC,GAAhD,EAAoD,IAApD,CAAD,CAAnB;AACD,GAfD;;AAiBA,SAAO;AAAEhB,IAAAA,gBAAF;AAAoBE,IAAAA,UAApB;AAAgCE,IAAAA;AAAhC,GAAP;AACD,CAjCD;;AAmCA,eAAeT,aAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n  const [validationStatus, setValidationStatus] = useState(false);\n  const [errorArray, setErrorArray] = useState([]);\n\n  const initiateValidation = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n    runValidationRules();\n    return {};\n  };\n\n  const addToErrorArray = string => setErrorArray([...errorArray, string]);\n\n  const runValidationRules = () => {\n    if (!usernameToValidate) {\n        setValidationStatus(false)\n        addToErrorArray(\"Username does not exist!\");\n    }\n    if (!passwordToValidate) {\n        setValidationStatus(false)\n        addToErrorArray(\"Password does not exist!\");\n    }\n    if (passwordToValidate && passwordToValidate.length < 5 ) {\n        setValidationStatus(false)\n        addToErrorArray(\"Passoword length less than 5 characters!\");\n    }\n    console.log(validationResultsArray.reduce((sum,num)=>sum && num,true))\n    setValidationStatus(validationResultsArray.reduce((sum,num)=>sum && num,true))\n  };\n\n  return { validationStatus, errorArray, initiateValidation };\n};\n\nexport default useValidation;\n"]},"metadata":{},"sourceType":"module"}