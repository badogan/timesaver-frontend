{"ast":null,"code":"var _jsxFileName = \"/Users/basri/Development/code/timesaver-frontend/src/components/GetSelectionsAndNews.js\";\nimport React, { useState } from \"react\";\nimport API from '../APIsHelpers/API';\n\nconst GetSelectionsAndNews = props => {\n  const {\n    updateNews\n  } = props;\n  const COUNTRY_SELECTIONS = [\"gb\", \"us\", \"de\", \"nl\", \"fr\", \"ru\"];\n  const [countrySelected, setCountrySelected] = useState(COUNTRY_SELECTIONS[0]);\n\n  const updateCountrySelected = event => setCountrySelected(event.target.value);\n\n  const CATEGORY_SELECTIONS = ['business', 'entertainment', 'general', 'health', 'science', 'sports', 'technology'];\n  const [categorySelected, setCategorySelected] = useState(CATEGORY_SELECTIONS[0]);\n\n  const updateCategorySelected = event => setCategorySelected(event.target.value);\n\n  const fetchNews = () => {\n    //TODO: Deal with multiple pages, etc here (by adding/managing states)\n    //DONE - Pass results up only if all is fine\n    API.getNews(countrySelected, categorySelected).then(data => {\n      updateNews(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"getselections-container wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Country:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: updateCountrySelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, COUNTRY_SELECTIONS.map((selection, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: selection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 63\n    }\n  }, selection))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Category:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: updateCategorySelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, CATEGORY_SELECTIONS.map((selection, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: selection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 64\n    }\n  }, selection))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchNews,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Get news\"));\n};\n\nexport default GetSelectionsAndNews;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/components/GetSelectionsAndNews.js"],"names":["React","useState","API","GetSelectionsAndNews","props","updateNews","COUNTRY_SELECTIONS","countrySelected","setCountrySelected","updateCountrySelected","event","target","value","CATEGORY_SELECTIONS","categorySelected","setCategorySelected","updateCategorySelected","fetchNews","getNews","then","data","map","selection","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAEpC,QAAM;AAACC,IAAAA;AAAD,MAAeD,KAArB;AAEA,QAAME,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA8B,IAA9B,CAA3B;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAACK,kBAAkB,CAAC,CAAD,CAAnB,CAAtD;;AACA,QAAMG,qBAAqB,GAAIC,KAAD,IAAWF,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA3D;;AAEA,QAAMC,mBAAmB,GAAG,CAAC,UAAD,EAAa,eAAb,EAA8B,SAA9B,EAAyC,QAAzC,EAAmD,SAAnD,EAA8D,QAA9D,EAAwE,YAAxE,CAA5B;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAACY,mBAAmB,CAAC,CAAD,CAApB,CAAxD;;AACA,QAAMG,sBAAsB,GAAIN,KAAD,IAAWK,mBAAmB,CAACL,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA7D;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACpB;AACA;AACAf,IAAAA,GAAG,CAACgB,OAAJ,CAAYX,eAAZ,EAA4BO,gBAA5B,EAA8CK,IAA9C,CAAmDC,IAAI,IAAE;AAErDf,MAAAA,UAAU,CAACe,IAAD,CAAV;AACH,KAHD;AAIH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,IAAA,QAAQ,EAAEX,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,kBAAkB,CAACe,GAAnB,CAAuB,CAACC,SAAD,EAAYC,KAAZ,kBAAsB;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAED,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,SAAvC,CAA7C,CADL,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,eAMI;AAAQ,IAAA,QAAQ,EAAEN,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,mBAAmB,CAACQ,GAApB,CAAwB,CAACC,SAAD,EAAYC,KAAZ,kBAAsB;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAED,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,SAAvC,CAA9C,CADL,CANJ,eASI;AAAQ,IAAA,OAAO,EAAEL,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,CADJ;AAaH,CAlCD;;AAoCA,eAAed,oBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport API from '../APIsHelpers/API'\n\nconst GetSelectionsAndNews = (props) => {\n\n    const {updateNews} = props\n\n    const COUNTRY_SELECTIONS = [\"gb\", \"us\", \"de\", \"nl\", \"fr\",\"ru\"];\n    const [countrySelected, setCountrySelected] = useState(COUNTRY_SELECTIONS[0]);\n    const updateCountrySelected = (event) => setCountrySelected(event.target.value)\n\n    const CATEGORY_SELECTIONS = ['business', 'entertainment', 'general', 'health', 'science', 'sports', 'technology']\n    const [categorySelected, setCategorySelected] = useState(CATEGORY_SELECTIONS[0])\n    const updateCategorySelected = (event) => setCategorySelected(event.target.value)\n\n    const fetchNews = () => {\n        //TODO: Deal with multiple pages, etc here (by adding/managing states)\n        //DONE - Pass results up only if all is fine\n        API.getNews(countrySelected,categorySelected).then(data=>{\n            \n            updateNews(data)\n        })\n    }\n\n    return (\n        <div className=\"getselections-container wrapper\">\n            <label>Country:</label>\n            <select onChange={updateCountrySelected}>\n                {COUNTRY_SELECTIONS.map((selection, index) => <option key={index} value={selection}>{selection}</option>)}\n            </select>\n            <label>Category:</label>\n            <select onChange={updateCategorySelected}>\n                {CATEGORY_SELECTIONS.map((selection, index) => <option key={index} value={selection}>{selection}</option>)}\n            </select>\n            <button onClick={fetchNews}>Get news</button>\n        </div>\n    );\n};\n\nexport default GetSelectionsAndNews;\n"]},"metadata":{},"sourceType":"module"}