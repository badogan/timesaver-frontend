{"ast":null,"code":"import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n  const [errorArray, setErrorArray] = useState();\n\n  const addToErrorArray = string => {\n    console.log(string);\n    setErrorArray(string => [...errorArray, string]);\n    console.log(errorArray);\n  }; // const addUser = (newuser) => setUsers(users=>[newuser,...users])\n\n\n  async function validate(name, password) {\n    //   const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n\n    if (!usernameToValidate) {\n      addToErrorArray(\"Username does not exist!\");\n    }\n\n    if (!passwordToValidate) {\n      addToErrorArray(\"Password does not exist!\");\n    }\n\n    if (passwordToValidate && passwordToValidate.length < 5) {\n      addToErrorArray(\"Passoword length less than 5 characters!\");\n    }\n\n    return {\n      errorArray\n    };\n  }\n\n  ;\n  return {\n    validate\n  };\n};\n\nexport default useValidation;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/hooks/useValidation.js"],"names":["useState","useValidation","usernameToValidate","setUsernameToValidate","passwordToValidate","setPasswordToValidate","errorArray","setErrorArray","addToErrorArray","string","console","log","validate","name","password","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CH,QAAQ,EAA5D;AACA,QAAM,CAACI,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,EAA5D;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,EAA5C;;AAEA,QAAMQ,eAAe,GAAGC,MAAM,IAAI;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAF,IAAAA,aAAa,CAACE,MAAM,IAAE,CAAC,GAAGH,UAAJ,EAAgBG,MAAhB,CAAT,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACD,GAJH,CAL0B,CAWxB;;;AAEF,iBAAeM,QAAf,CAAwBC,IAAxB,EAA6BC,QAA7B,EAAsC;AACxC;AACIX,IAAAA,qBAAqB,CAACU,IAAD,CAArB;AACAR,IAAAA,qBAAqB,CAACS,QAAD,CAArB;;AACA,QAAI,CAACZ,kBAAL,EAAyB;AACrBM,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAI,CAACJ,kBAAL,EAAyB;AACrBI,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAIJ,kBAAkB,IAAIA,kBAAkB,CAACW,MAAnB,GAA4B,CAAtD,EAA0D;AACtDP,MAAAA,eAAe,CAAC,0CAAD,CAAf;AACH;;AACD,WAAO;AAACF,MAAAA;AAAD,KAAP;AACD;;AAAA;AAED,SAAO;AAAEM,IAAAA;AAAF,GAAP;AAED,CA/BD;;AAiCA,eAAeX,aAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n  const [errorArray, setErrorArray] = useState();\n\n  const addToErrorArray = string => {\n      console.log(string)\n      setErrorArray(string=>[...errorArray, string])\n      console.log(errorArray)\n    };\n\n    // const addUser = (newuser) => setUsers(users=>[newuser,...users])\n\n  async function validate(name,password){\n//   const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n    if (!usernameToValidate) {\n        addToErrorArray(\"Username does not exist!\");\n    }\n    if (!passwordToValidate) {\n        addToErrorArray(\"Password does not exist!\");\n    }\n    if (passwordToValidate && passwordToValidate.length < 5 ) {\n        addToErrorArray(\"Passoword length less than 5 characters!\");\n    }\n    return {errorArray}\n  };\n\n  return { validate };\n\n};\n\nexport default useValidation;"]},"metadata":{},"sourceType":"module"}