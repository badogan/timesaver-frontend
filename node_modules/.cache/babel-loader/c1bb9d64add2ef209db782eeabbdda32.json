{"ast":null,"code":"var _jsxFileName = \"/Users/basri/Development/code/timesaver-frontend/src/components/GetSelections.js\";\nimport React, { useState } from \"react\";\n\nconst GetSelections = () => {\n  const LANGUAGE_SELECTIONS = [\"EN\", \"TR\", \"AR\", \"PT\", \"RU\"];\n  const [languageSelected, setLanguageSelected] = useState(LANGUAGE_SELECTIONS[0]);\n\n  const updateLanguageSelected = event => setLanguageSelected(event.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"getselections-container wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Language:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: updateLanguageSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, LANGUAGE_SELECTIONS.map((selection, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: selection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 64\n    }\n  }, lang))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Language Selected is:\", languageSelected));\n};\n\nexport default GetSelections;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/components/GetSelections.js"],"names":["React","useState","GetSelections","LANGUAGE_SELECTIONS","languageSelected","setLanguageSelected","updateLanguageSelected","event","target","value","map","selection","index","lang"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,mBAAmB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAA5B;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,QAAQ,CAACE,mBAAmB,CAAC,CAAD,CAApB,CAAxD;;AACA,QAAMG,sBAAsB,GAAIC,KAAD,IAAWF,mBAAmB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA7D;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAQ,IAAA,QAAQ,EAAEH,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,mBAAmB,CAACO,GAApB,CAAwB,CAACC,SAAD,EAAYC,KAAZ,kBAAsB;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAED,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCE,IAAvC,CAA9C,CADL,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA0BT,gBAA1B,CALJ,CADJ;AASH,CAdD;;AAgBA,eAAeF,aAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst GetSelections = () => {\n    const LANGUAGE_SELECTIONS = [\"EN\", \"TR\", \"AR\", \"PT\", \"RU\"];\n    const [languageSelected, setLanguageSelected] = useState(LANGUAGE_SELECTIONS[0]);\n    const updateLanguageSelected = (event) => setLanguageSelected(event.target.value)\n\n    return (\n        <div className=\"getselections-container wrapper\">\n            <label>Language:</label>\n            <select onChange={updateLanguageSelected}>\n                {LANGUAGE_SELECTIONS.map((selection, index) => <option key={index} value={selection}>{lang}</option>)}\n            </select>\n            <h1>Language Selected is:{languageSelected}</h1>\n        </div>\n    );\n};\n\nexport default GetSelections;\n"]},"metadata":{},"sourceType":"module"}