{"ast":null,"code":"var _jsxFileName = \"/Users/basri/Development/code/timesaver-frontend/src/components/GetSelections.js\";\nimport React, { useState } from \"react\";\n\nconst GetSelections = () => {\n  const LANGUAGE_SELECTIONS = ['EN', 'TR', 'AR', 'PT', 'RU'];\n  const [languageSelected, setLanguageSelected] = useState(LANGUAGE_SELECTIONS[0]);\n\n  const updateLanguageSelected = event => {\n    setLanguageSelected(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"getselections-container wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Language:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: updateLanguageSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"EN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Eglish\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"TR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Turkish\")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Language Selected is:\", languageSelected));\n};\n\nexport default GetSelections;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/components/GetSelections.js"],"names":["React","useState","GetSelections","LANGUAGE_SELECTIONS","languageSelected","setLanguageSelected","updateLanguageSelected","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,mBAAmB,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,CAA5B;AACF,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,QAAQ,CAACE,mBAAmB,CAAC,CAAD,CAApB,CAAxD;;AACA,QAAMG,sBAAsB,GAAGC,KAAK,IAAI;AACtCF,IAAAA,mBAAmB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAQ,IAAA,QAAQ,EAAEH,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA0BF,gBAA1B,CAPF,CADF;AAWD,CAlBD;;AAoBA,eAAeF,aAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst GetSelections = () => {\n    const LANGUAGE_SELECTIONS = ['EN','TR','AR','PT','RU']\n  const [languageSelected, setLanguageSelected] = useState(LANGUAGE_SELECTIONS[0]);\n  const updateLanguageSelected = event => {\n    setLanguageSelected(event.target.value);\n  };\n\n  return (\n    <div className=\"getselections-container wrapper\">\n      <label>Language:</label>\n      <select onChange={updateLanguageSelected}>\n          \n        <option value=\"EN\">Eglish</option>\n        <option value=\"TR\">Turkish</option>\n      </select>\n      <h1>Language Selected is:{languageSelected}</h1>\n    </div>\n  );\n};\n\nexport default GetSelections;\n"]},"metadata":{},"sourceType":"module"}