{"ast":null,"code":"import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n\n  const addToErrorArray = string => {\n    setErrorArray(errorArray => [...errorArray, string]);\n  };\n\n  const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n    setErrorArray([]);\n\n    if (!passwordToValidate) {\n      addToErrorArray(\"Password does not exist!\");\n    }\n\n    if (!usernameToValidate) {\n      addToErrorArray(\"Username does not exist!\");\n    }\n\n    if (passwordToValidate && passwordToValidate.length < 5) {\n      addToErrorArray(\"Password length less than 5 characters!\");\n    }\n  };\n\n  return {\n    validate,\n    errorArray\n  };\n};\n\nexport default useValidation;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/hooks/useValidation.js"],"names":["useState","useValidation","usernameToValidate","setUsernameToValidate","passwordToValidate","setPasswordToValidate","addToErrorArray","string","setErrorArray","errorArray","validate","name","password","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CH,QAAQ,EAA5D;AACA,QAAM,CAACI,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,EAA5D;;AAGA,QAAMM,eAAe,GAAIC,MAAD,IAAY;AAChCC,IAAAA,aAAa,CAACC,UAAU,IAAE,CAAC,GAAGA,UAAJ,EAAgBF,MAAhB,CAAb,CAAb;AACD,GAFH;;AAIA,QAAMG,QAAQ,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACnCT,IAAAA,qBAAqB,CAACQ,IAAD,CAArB;AACAN,IAAAA,qBAAqB,CAACO,QAAD,CAArB;AACAJ,IAAAA,aAAa,CAAC,EAAD,CAAb;;AACA,QAAI,CAACJ,kBAAL,EAAyB;AACrBE,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAI,CAACJ,kBAAL,EAAyB;AACrBI,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAIF,kBAAkB,IAAIA,kBAAkB,CAACS,MAAnB,GAA4B,CAAtD,EAA0D;AACtDP,MAAAA,eAAe,CAAC,yCAAD,CAAf;AACH;AACF,GAbD;;AAeA,SAAO;AAAEI,IAAAA,QAAF;AAAWD,IAAAA;AAAX,GAAP;AAED,CA1BD;;AA4BA,eAAeR,aAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n\n\n  const addToErrorArray = (string) => {\n      setErrorArray(errorArray=>[...errorArray, string])\n    };\n\n  const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n    setErrorArray([])\n    if (!passwordToValidate) {\n        addToErrorArray(\"Password does not exist!\");\n    }\n    if (!usernameToValidate) {\n        addToErrorArray(\"Username does not exist!\");\n    }\n    if (passwordToValidate && passwordToValidate.length < 5 ) {\n        addToErrorArray(\"Password length less than 5 characters!\");\n    }\n  };\n\n  return { validate,errorArray };\n\n};\n\nexport default useValidation;"]},"metadata":{},"sourceType":"module"}