{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState(null);\n  const [passwordToValidate, setPasswordToValidate] = useState(null); //   const [errorArray, setErrorArray] = useState([]);\n\n  useEffect(() => {\n    runValidationRules();\n  }, [usernameToValidate, passwordToValidate]); //   useEffect(() => {\n  //     setErrorArray([])\n  //   }, []);\n  //   const addToErrorArray = string => {\n  //     setErrorArray(errorArray => [...errorArray, string]);\n  //   };\n\n  const runValidationRules = () => {\n    //   setErrorArray([])\n    let errorArray = [];\n\n    if (!passwordToValidate) {\n      //   addToErrorArray(\"Password does not exist!\");\n      errorArray.push(\"Password does not exist!\");\n    }\n\n    if (!usernameToValidate) {\n      addToErrorArray(\"Username does not exist!\");\n    }\n\n    if (passwordToValidate && passwordToValidate.length < 5) {\n      addToErrorArray(\"Password length less than 5 characters!\");\n    }\n  };\n\n  const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n  };\n\n  return {\n    validate,\n    errorArray\n  };\n};\n\nexport default useValidation;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/hooks/useValidation.js"],"names":["useState","useEffect","useValidation","usernameToValidate","setUsernameToValidate","passwordToValidate","setPasswordToValidate","runValidationRules","errorArray","push","addToErrorArray","length","validate","name","password"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CJ,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,IAAD,CAA5D,CAF0B,CAG5B;;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,CAACJ,kBAAD,EAAqBE,kBAArB,CAFM,CAAT,CAL0B,CAS5B;AACA;AACA;AAEA;AACA;AACA;;AAEE,QAAME,kBAAkB,GAAG,MAAM;AAC/B;AACA,QAAIC,UAAU,GAAG,EAAjB;;AACA,QAAI,CAACH,kBAAL,EAAyB;AACzB;AACEG,MAAAA,UAAU,CAACC,IAAX,CAAgB,0BAAhB;AACD;;AACD,QAAI,CAACN,kBAAL,EAAyB;AACvBO,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACD;;AACD,QAAIL,kBAAkB,IAAIA,kBAAkB,CAACM,MAAnB,GAA4B,CAAtD,EAAyD;AACvDD,MAAAA,eAAe,CAAC,yCAAD,CAAf;AACD;AACF,GAbD;;AAeA,QAAME,QAAQ,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACnCV,IAAAA,qBAAqB,CAACS,IAAD,CAArB;AACAP,IAAAA,qBAAqB,CAACQ,QAAD,CAArB;AACD,GAHD;;AAKA,SAAO;AAAEF,IAAAA,QAAF;AAAYJ,IAAAA;AAAZ,GAAP;AACD,CAtCD;;AAwCA,eAAeN,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState(null);\n  const [passwordToValidate, setPasswordToValidate] = useState(null);\n//   const [errorArray, setErrorArray] = useState([]);\n\n  useEffect(() => {\n    runValidationRules();\n  }, [usernameToValidate, passwordToValidate]);\n\n//   useEffect(() => {\n//     setErrorArray([])\n//   }, []);\n\n//   const addToErrorArray = string => {\n//     setErrorArray(errorArray => [...errorArray, string]);\n//   };\n\n  const runValidationRules = () => {\n    //   setErrorArray([])\n    let errorArray = []\n    if (!passwordToValidate) {\n    //   addToErrorArray(\"Password does not exist!\");\n      errorArray.push(\"Password does not exist!\")\n    }\n    if (!usernameToValidate) {\n      addToErrorArray(\"Username does not exist!\");\n    }\n    if (passwordToValidate && passwordToValidate.length < 5) {\n      addToErrorArray(\"Password length less than 5 characters!\");\n    }\n  };\n\n  const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n  };\n\n  return { validate, errorArray };\n};\n\nexport default useValidation;\n"]},"metadata":{},"sourceType":"module"}