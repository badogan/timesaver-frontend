{"ast":null,"code":"import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n  const [errorArray, setErrorArray] = useState([]);\n\n  async function validate(name, password) {\n    const validate = (name, password) => {\n      setUsernameToValidate(name);\n      setPasswordToValidate(password);\n      runValidationRules();\n    };\n  }\n\n  const addToErrorArray = string => setErrorArray([...errorArray, string]);\n\n  const runValidationRules = () => {\n    if (!usernameToValidate) {\n      addToErrorArray(\"Username does not exist!\");\n    }\n\n    if (!passwordToValidate) {\n      addToErrorArray(\"Password does not exist!\");\n    }\n\n    if (passwordToValidate && passwordToValidate.length < 5) {\n      addToErrorArray(\"Passoword length less than 5 characters!\");\n    }\n\n    return {\n      errorArray\n    };\n  };\n\n  return {\n    validate\n  };\n};\n\nexport default useValidation;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/hooks/useValidation.js"],"names":["useState","useValidation","usernameToValidate","setUsernameToValidate","passwordToValidate","setPasswordToValidate","errorArray","setErrorArray","validate","name","password","runValidationRules","addToErrorArray","string","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CH,QAAQ,EAA5D;AACA,QAAM,CAACI,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,EAA5D;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,iBAAeQ,QAAf,CAAwBC,IAAxB,EAA6BC,QAA7B,EAAsC;AACtC,UAAMF,QAAQ,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACnCP,MAAAA,qBAAqB,CAACM,IAAD,CAArB;AACAJ,MAAAA,qBAAqB,CAACK,QAAD,CAArB;AACAC,MAAAA,kBAAkB;AACnB,KAJD;AAQC;;AAED,QAAMC,eAAe,GAAGC,MAAM,IAAIN,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBO,MAAhB,CAAD,CAA/C;;AAEA,QAAMF,kBAAkB,GAAG,MAAM;AAC/B,QAAI,CAACT,kBAAL,EAAyB;AACrBU,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAI,CAACR,kBAAL,EAAyB;AACrBQ,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAIR,kBAAkB,IAAIA,kBAAkB,CAACU,MAAnB,GAA4B,CAAtD,EAA0D;AACtDF,MAAAA,eAAe,CAAC,0CAAD,CAAf;AACH;;AACD,WAAO;AAACN,MAAAA;AAAD,KAAP;AACD,GAXD;;AAaA,SAAO;AAAEE,IAAAA;AAAF,GAAP;AAED,CAjCD;;AAmCA,eAAeP,aAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n  const [errorArray, setErrorArray] = useState([]);\n\n  async function validate(name,password){\n  const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n    runValidationRules();\n  };\n\n  \n\n  }\n\n  const addToErrorArray = string => setErrorArray([...errorArray, string]);\n\n  const runValidationRules = () => {\n    if (!usernameToValidate) {\n        addToErrorArray(\"Username does not exist!\");\n    }\n    if (!passwordToValidate) {\n        addToErrorArray(\"Password does not exist!\");\n    }\n    if (passwordToValidate && passwordToValidate.length < 5 ) {\n        addToErrorArray(\"Passoword length less than 5 characters!\");\n    }\n    return {errorArray}\n  };\n\n  return { validate };\n\n};\n\nexport default useValidation;"]},"metadata":{},"sourceType":"module"}