{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState(null);\n  const [passwordToValidate, setPasswordToValidate] = useState(null);\n  const [errorArray, setErrorArray] = useState([]); //   useEffect(() => {\n  //     // document.title = `You clicked ${count} times`;\n  //     setErrorArray([])\n  //   },[]);\n\n  useEffect(() => {\n    setErrorArray([]);\n  }, [usernameToValidate, passwordToValidate]);\n\n  const addToErrorArray = string => {\n    setErrorArray(errorArray => [...errorArray, string]);\n  };\n\n  const runValidationRules = () => {};\n\n  const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n\n    if (passwordToValidate === null) {\n      addToErrorArray(\"Password does not exist!\");\n    }\n\n    if (usernameToValidate === null) {\n      addToErrorArray(\"Username does not exist!\");\n    }\n\n    if (passwordToValidate && passwordToValidate.length < 5) {\n      addToErrorArray(\"Password length less than 5 characters!\");\n    }\n  };\n\n  return {\n    validate,\n    errorArray\n  };\n};\n\nexport default useValidation;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/hooks/useValidation.js"],"names":["useState","useEffect","useValidation","usernameToValidate","setUsernameToValidate","passwordToValidate","setPasswordToValidate","errorArray","setErrorArray","addToErrorArray","string","runValidationRules","validate","name","password","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CJ,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C,CAH0B,CAK1B;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAFQ,EAEN,CAACL,kBAAD,EAAqBE,kBAArB,CAFM,CAAT;;AAIA,QAAMI,eAAe,GAAGC,MAAM,IAAI;AAChCF,IAAAA,aAAa,CAACD,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgBG,MAAhB,CAAf,CAAb;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,MAAM,CAEhC,CAFD;;AAIA,QAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACnCV,IAAAA,qBAAqB,CAACS,IAAD,CAArB;AACAP,IAAAA,qBAAqB,CAACQ,QAAD,CAArB;;AACA,QAAIT,kBAAkB,KAAK,IAA3B,EAAiC;AAC/BI,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACD;;AACD,QAAIN,kBAAkB,KAAK,IAA3B,EAAiC;AAC/BM,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACD;;AACD,QAAIJ,kBAAkB,IAAIA,kBAAkB,CAACU,MAAnB,GAA4B,CAAtD,EAAyD;AACvDN,MAAAA,eAAe,CAAC,yCAAD,CAAf;AACD;AACF,GAZD;;AAcA,SAAO;AAAEG,IAAAA,QAAF;AAAYL,IAAAA;AAAZ,GAAP;AACD,CArCD;;AAuCA,eAAeL,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState(null);\n  const [passwordToValidate, setPasswordToValidate] = useState(null);\n  const [errorArray, setErrorArray] = useState([]);\n\n  //   useEffect(() => {\n  //     // document.title = `You clicked ${count} times`;\n  //     setErrorArray([])\n  //   },[]);\n\n  useEffect(() => {\n    setErrorArray([]);\n  }, [usernameToValidate, passwordToValidate]);\n\n  const addToErrorArray = string => {\n    setErrorArray(errorArray => [...errorArray, string]);\n  };\n\n  const runValidationRules = () => {\n      \n  }\n\n  const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n    if (passwordToValidate === null) {\n      addToErrorArray(\"Password does not exist!\");\n    }\n    if (usernameToValidate === null) {\n      addToErrorArray(\"Username does not exist!\");\n    }\n    if (passwordToValidate && passwordToValidate.length < 5) {\n      addToErrorArray(\"Password length less than 5 characters!\");\n    }\n  };\n\n  return { validate, errorArray };\n};\n\nexport default useValidation;\n"]},"metadata":{},"sourceType":"module"}