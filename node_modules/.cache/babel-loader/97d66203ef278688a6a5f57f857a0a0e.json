{"ast":null,"code":"import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n  const [errorArray, setErrorArray] = useState([]);\n\n  const addToErrorArray = string => {\n    setErrorArray(errorArray => [...errorArray, string]);\n    useEffect(() => {\n      setMovies(result);\n    }, []);\n  };\n\n  const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n    setErrorArray([]);\n\n    if (!passwordToValidate) {\n      addToErrorArray(\"Password does not exist!\");\n    }\n\n    if (!usernameToValidate) {\n      addToErrorArray(\"Username does not exist!\");\n    }\n\n    if (passwordToValidate && passwordToValidate.length < 5) {\n      addToErrorArray(\"Password length less than 5 characters!\");\n    }\n  };\n\n  return {\n    validate,\n    errorArray\n  };\n};\n\nexport default useValidation;","map":{"version":3,"sources":["/Users/basri/Development/code/timesaver-frontend/src/hooks/useValidation.js"],"names":["useState","useValidation","usernameToValidate","setUsernameToValidate","passwordToValidate","setPasswordToValidate","errorArray","setErrorArray","addToErrorArray","string","useEffect","setMovies","result","validate","name","password","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CH,QAAQ,EAA5D;AACA,QAAM,CAACI,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,EAA5D;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMQ,eAAe,GAAIC,MAAD,IAAY;AAChCF,IAAAA,aAAa,CAACD,UAAU,IAAE,CAAC,GAAGA,UAAJ,EAAgBG,MAAhB,CAAb,CAAb;AACAC,IAAAA,SAAS,CAAC,MAAM;AAAEC,MAAAA,SAAS,CAACC,MAAD,CAAT;AAAmB,KAA5B,EAA8B,EAA9B,CAAT;AACD,GAHH;;AAKA,QAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACnCZ,IAAAA,qBAAqB,CAACW,IAAD,CAArB;AACAT,IAAAA,qBAAqB,CAACU,QAAD,CAArB;AACAR,IAAAA,aAAa,CAAC,EAAD,CAAb;;AACA,QAAI,CAACH,kBAAL,EAAyB;AACrBI,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAI,CAACN,kBAAL,EAAyB;AACrBM,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;;AACD,QAAIJ,kBAAkB,IAAIA,kBAAkB,CAACY,MAAnB,GAA4B,CAAtD,EAA0D;AACtDR,MAAAA,eAAe,CAAC,yCAAD,CAAf;AACH;AACF,GAbD;;AAeA,SAAO;AAAEK,IAAAA,QAAF;AAAWP,IAAAA;AAAX,GAAP;AAED,CA3BD;;AA6BA,eAAeL,aAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useValidation = () => {\n  const [usernameToValidate, setUsernameToValidate] = useState();\n  const [passwordToValidate, setPasswordToValidate] = useState();\n  const [errorArray, setErrorArray] = useState([]);\n\n  const addToErrorArray = (string) => {\n      setErrorArray(errorArray=>[...errorArray, string])\n      useEffect(() => { setMovies(result) }, [])\n    };\n\n  const validate = (name, password) => {\n    setUsernameToValidate(name);\n    setPasswordToValidate(password);\n    setErrorArray([])\n    if (!passwordToValidate) {\n        addToErrorArray(\"Password does not exist!\");\n    }\n    if (!usernameToValidate) {\n        addToErrorArray(\"Username does not exist!\");\n    }\n    if (passwordToValidate && passwordToValidate.length < 5 ) {\n        addToErrorArray(\"Password length less than 5 characters!\");\n    }\n  };\n\n  return { validate,errorArray };\n\n};\n\nexport default useValidation;"]},"metadata":{},"sourceType":"module"}